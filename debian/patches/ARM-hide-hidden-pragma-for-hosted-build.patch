From: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Date: Tue, 28 Jun 2016 17:17:57 +0200
Subject: ARM: hide 'hidden' pragma for hosted build

The hidden visibility #pragma in inc/arm/efibind.h was meant to inform
the compiler that symbols with external linkage are never exported from
shared libraries [and thus never preempted] when executing in UEFI context
(since UEFI does not support shared libraries). This allows the compiler to
generate relative symbol references instead of GOT entries, which is much more
efficient since the latter need to be relocated before invoking the entry
point of the UEFI app.

However, as it turns out, this pragma is leaking into other code that does
not run in UEFI context, but simply needs to access data structures that
UEFI defines. So make the pragma dependent on whether we are building with
-ffreestanding, which is only used for bare metal code such as UEFI.

Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
---
 inc/arm/efibind.h | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/inc/arm/efibind.h b/inc/arm/efibind.h
index 8c37f64..2d98888 100644
--- a/inc/arm/efibind.h
+++ b/inc/arm/efibind.h
@@ -36,7 +36,9 @@ typedef signed char         int8_t;   // unqualified 'char' is unsigned on ARM
  * This prevents GCC from emitting GOT based relocations, and use R_ARM_REL32
  * relative relocations instead, which are more suitable for static binaries.
  */
+#if defined(__GNUC__) && !__STDC_HOSTED__
 #pragma GCC visibility push (hidden)
+#endif
 
 //
 // Basic EFI types of various widths
